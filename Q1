#include <iostream>
#include <algorithm>

using namespace std;

int findMinDiff(int arr[], int n, int m) {
    // If there are more students than packets, it's not possible to distribute.
    if (m > n) {
        return -1;
    }

    // Sort the array in ascending order.
    sort(arr, arr + n);

    // Initialize the minimum difference.
    int min_diff = arr[n - 1] - arr[0];

    // Find the minimum difference by considering all possible distributions.
    for (int i = 0; i < n - m + 1; i++) {
        int diff = arr[i + m - 1] - arr[i];
        min_diff = min(min_diff, diff);
    }

    return min_diff;
}

int main() {
    int arr[] = {7, 3, 2, 4, 9, 12, 56};
    int m = 3;
    int n = sizeof(arr) / sizeof(arr[0]);

    int min_diff = findMinDiff(arr, n, m);

    cout << "Minimum difference: " << min_diff << endl;

    return 0;
}
